<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="Consulta Inventario"
		currentState="initialState"
		creationComplete="view1_creationCompleteHandler(event)">
	<s:states>
		<s:State name="initialState"/>
		<s:State name="busyState"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:SkinnablePopUpContainer id="popDetalle">
			<s:Rect width="100%" height="100%" topRightRadiusX="15" bottomLeftRadiusX="15" bottomRightRadiusX="15">
				<s:stroke>
					<s:SolidColorStroke color="#424242"/>
				</s:stroke>
				<s:fill>
					<s:SolidColor color="#424242"/>
				</s:fill>
			</s:Rect>
			<s:VGroup width="100%" horizontalAlign="center" paddingBottom="20" paddingLeft="20" paddingRight="20" paddingTop="20">
				<s:Group>
					<s:Group top="10" height="30">
						<s:Label text="Ref: " left="0" verticalCenter="0" color="White" fontWeight="bold"/>
						<s:Label id="lreferenceItem" left="50" verticalCenter="0" color="White" fontWeight="bold"/>
					</s:Group>
					<s:Group top="40" height="30">
						<s:Label text="Nom: " left="0" verticalCenter="0" color="White" fontWeight="bold"/>
						<s:Label id="lnameItem" left="50" verticalCenter="0" color="White" fontWeight="bold" width="150" height="16"/>
					</s:Group>
					<s:Group top="70" height="30">
						<s:Label text="Exis: " verticalCenter="0" left="0" color="White" fontWeight="bold"/>
						<s:Label id="lexistenciaItem" verticalCenter="0" left="50" color="White" fontWeight="bold"/>
					</s:Group>
					<s:Group top="100" height="30">
						<s:Label text="Val/u: " verticalCenter="0" left="0" color="White" fontWeight="bold"/>
						<s:TextInput id="tvaloru" verticalCenter="0" left="50" fontWeight="bold" width="100" 
									 keyUp="maketotal()" skinClass="spark.skins.mobile.TextInputSkin"/>
					</s:Group>
					<s:Group top="140" left="0">
						<s:Label text="Can: " left="0" verticalCenter="0" color="White" fontWeight="bold"/>
						<s:TextInput id="tcantidad" text="0" verticalCenter="0" width="50" left="50" prompt="Cantidad" enabled.busyState="false" 
									 keyUp="maketotal()" textInput="maketotal()" skinClass="spark.skins.mobile.TextInputSkin"/>
					</s:Group>
					<s:Group top="180">
						<s:Label text="Des: " left="0" verticalCenter="0" color="White" fontWeight="bold"/>
						<s:TextInput id="tdesceunto" text="0" width="50" verticalCenter="0" left="50" prompt="Descuento" enabled.busyState="false"
									 keyUp="maketotal()" textInput="maketotal()" skinClass="spark.skins.mobile.TextInputSkin"/>
					</s:Group>
					<s:Group top="220" height="30">
						<s:Label text="Subtotal: " left="0" verticalCenter="0" color="White" fontWeight="bold"/>
						<s:Label id="ltotal" left="100" verticalCenter="0" color="White" fontWeight="bold"/>
					</s:Group>
					<s:HGroup top="260">
						<s:Button label="Agregar" height="35" click="updateList(event)" enabled.busyState="false"/>
						<s:Spacer width="10"/>
						<s:Button label="Cancelar" height="35" click="closePopUpDetalle(event)"/>
					</s:HGroup>
					<s:Label id="lResponsePop" top="300" left="0" color="#F06F08" fontWeight="bold"/>
					<s:BusyIndicator horizontalCenter="0" verticalCenter="0" includeIn="busyState" width="50" height="50"/>
				</s:Group>
			</s:VGroup>				
		</s:SkinnablePopUpContainer>
		<s:CurrencyFormatter id="formater" 
							 useGrouping="true"
							 useCurrencySymbol="true"
							 currencySymbol="$"
							 positiveCurrencyFormat="0"
							 negativeCurrencyFormat="1"
							 />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import DAO.consultaCartera;
			import DAO.consultaInventario;
			import DAO.detalleArticulo;
			import DAO.factArticulo;
			
			import flashx.textLayout.formats.Float;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.SlideViewTransition;
			
			import utils.MadreEvent;
			import utils.Parametros;
			
			private var lib:DAO.consultaInventario;
			private var libArticulo:DAO.factArticulo;
			
			private var factArticulo:Object = {
				id:"",
				nombre:"",
				referencia:"",
				grav:"",
				idgrav:"",
				cantidad:"",
				valoru:"",
				descuento:"",
				bodega:"",
				subtotal:"",
				existencia:"",
				tipo:""
			};
			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				if(Parametros.ListaInventario.length >0){
					readyLista();	
				}
				if(data != null){
					bback.label = "Volver";
					title = "Escoja los articulos";
				}else{
					bback.label = "Salir";
				}
			}
			
			protected function bBuscar_clickHandler(event:MouseEvent):void
			{
				lResponse.text = "";
				currentState = "busyState";
				lib = new DAO.consultaInventario;
				lib.addEventListener("readyInventario", readyLista);
				lib.addEventListener("failInventario", failCousulta);
				if(data!=null){
					lib.start(tinput.text , tgrupo.text , data.toString());
				}else{
					lib.start(tinput.text , tgrupo.text);
				}
				
			}
			
			protected function readyLista(event:Event=null):void
			{
				var listInventario:ArrayCollection = new ArrayCollection();
				for each(var item:Object in Parametros.ListaInventario){
					
					//Se verifica que los datos vengan completos
					if(item[0]!="$$INCOMPLETEDATA"){
						listInventario.addItem({
							id:item[0],
							codigo:item[1],
							nombre:item[2],
							valor:item[3]
						});
					}else{
						lResponse.text = "Incompleto";
					}
					
				}
				currentState = "initialState";
				listadoConsulta.dataProvider = listInventario;
			}
			
			protected function listadoConsulta_changeHandler(event:IndexChangeEvent):void
			{
				if(data!=null){
					popDetalle.open(this);
					PopUpManager.centerPopUp(popDetalle);
					currentState="busyState";
					
					libArticulo = new DAO.factArticulo;
					libArticulo.addEventListener("failFactArticulo", failCousulta);
					libArticulo.addEventListener("readyFactArticulo", readyArticulo);
					libArticulo.start(listadoConsulta.selectedItem.id);
				}else{
					navigator.pushView(views.detalleArticulo , listadoConsulta.selectedItem);	
				}
			}
			
			protected function failCousulta(event:MadreEvent):void
			{
				currentState = "initialState";
				lResponse.text = event.contenido.toString();
				popDetalle.close();
			}
			
			protected function closePopUpDetalle(event:MouseEvent):void
			{
				popDetalle.close();
				currentState="initialState";
			}
			
			protected function readyArticulo(event:MadreEvent):void
			{
				var res:Object = event.contenido;
				factArticulo.id = listadoConsulta.selectedItem.id;
				factArticulo.nombre = listadoConsulta.selectedItem.nombre;
				factArticulo.referencia = listadoConsulta.selectedItem.codigo;
				factArticulo.bodega = Parametros.paramsFact.bodega;
				
				factArticulo.valoru = res[0][0];
				factArticulo.idgrav = res[0][1];
				factArticulo.grav = res[0][2];
				factArticulo.tipo = res[0][3];
				lexistenciaItem.text = res[0][4];
				
				lreferenceItem.text = factArticulo.referencia;
				lnameItem.text = factArticulo.nombre;
				
				tcantidad.text = "0";
				tdesceunto.text = "0";
				tvaloru.text = factArticulo.valoru;
				
				currentState = "initialState";
			}
			
			private function maketotal(even:TextEvent=null):void{
				lResponsePop.text = "";
				
				var cantidad:Number = 0;
				var descuento:Number = 0;
				var grav:Number = 0;
				var valoru:Number = 0;
				
				if(!isNaN(Number(tvaloru.text))){
					valoru = Number(tvaloru.text);
				}else{
					lResponsePop.text = "Val/u Invalido";
				}
				
				if(!isNaN(Number(tcantidad.text))){
					cantidad = Number(tcantidad.text);
				}else{
					lResponsePop.text = "Cantidad Invalida";
				}
				
				if(!isNaN(Number(tdesceunto.text))){
					descuento= Number(tdesceunto.text);
				}else{
					lResponsePop.text = "Descuento Invalido";
				}
				
				var total:Number = Number(valoru)*cantidad*(100-descuento)/100;
				
				factArticulo.subtotal = total;
				
				ltotal.text = formater.format(total.toString());
			}
			
			protected function updateList(event:MouseEvent):void
			{
				maketotal();
				if(Number(lexistenciaItem.text)< Number(tcantidad.text)){
					lResponsePop.text = "Existencia Insuficiente";
				}else{
					if(Number(tcantidad.text)==0){
						lResponsePop.text = "Existencia Insuficiente";
					}else{
						factArticulo.valoru = tvaloru.text;
						factArticulo.cantidad = tcantidad.text;
						factArticulo.descuento = tdesceunto.text;
						factArticulo.existencia = lexistenciaItem.text;
						Parametros.listaItemsFactura.addItem(factArticulo);
						popDetalle.close();
						navigator.popView();
					}
				}
			}
			
			protected function bback_clickHandler(event:MouseEvent):void
			{
				if(data != null){
					navigator.popView();
				}else{
					NativeApplication.nativeApplication.exit()
				}
			}
			
		]]>
	</fx:Script>
	<s:actionContent>
		<s:Button id="bback" click="bback_clickHandler(event)"/>
	</s:actionContent>
	<s:TextInput id="tgrupo" left="10" top="10" width="62" prompt="Grupo Articulo"
				 enabled.busyState="false"/>
	<s:TextInput id="tinput" left="80" top="10" width="130" prompt="Ref/Nom Articulo"
				 enabled.busyState="false"/>
	<s:Button id="bBuscar" left="217" top="10" width="76" height="34" label="Buscar"
			  click="bBuscar_clickHandler(event)"
			  enabled.busyState="false"/>
	<s:List id="listadoConsulta" left="10" right="10" 
			top="80" bottom="40"
			itemRenderer="utils.lista3Renderer" 
			change="listadoConsulta_changeHandler(event)"></s:List>
	<s:BusyIndicator id="busyIndicator" width="200" height="200" horizontalCenter="0"
					 verticalCenter="0"
					 visible="false"/>
	<s:Label right="10" bottom="10" fontSize="16" fontWeight="bold" color="#18B6F0" id="lDialog"/>
	<s:Label left="100" top="55" text="Nombre" color="#6801B0" fontWeight="bold"/>
	<s:Label right="10" top="55" text="Cantidad" color="#6801B0" fontWeight="bold"/>
	<s:BusyIndicator includeIn="busyState" top="10" right="10" width="35" height="35"/>
	<s:Label left="10" top="55" text="Referencia" color="#6801B0" fontWeight="bold"/>
	<s:Label id="lResponse" left="10" bottom="10" color="#F06F08"
			 fontWeight="bold"/>

</s:View>


